{"version":3,"sources":["components/Navbar/Navigation.js","components/LayerCard/cardData.js","components/LayerCard/LayerCard.js","components/LayerList/layersList.js","components/LayerList/LayerList.js","components/Part1/ModelTuning/ModelTuning.js","components/Part1/ModelResult/ModelResult.js","components/Part1/Report/Report.js","components/Part1/Intro/Intro.js","navLinks.js","components/Part2/ModelResult/ModelResult.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","props","data","id","index","home","tuning","result","report","buttonName","buttonLink","useState","stateClicked","handleToggle","toggleCollapse","className","Navbar","expand","Brand","href","Nav","Link","Button","size","onClick","layerData","LayerCard","title","desc","layersList","LayerList","ModelTuning","listoflayers","cardData","map","Container","Row","Col","OverlayTrigger","overlay","Tooltip","color","Form","Group","controlId","Control","as","type","placeholder","ModelResult","width","height","chartType","loader","options","chart","subtitle","rootProps","Report","Intro","exact","to","navLinks","App","link","window","location","pathname","partName","substring","indexOf","length","console","log","navBar","part2","path","basename","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c31e8a60.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport './Navigation.css'\n\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Button from 'react-bootstrap/Button'\nimport {\n    BrowserRouter as Router,\n    HashRouter,\n    Link,\n  } from \"react-router-dom\";\n\nimport { VscQuestion } from \"react-icons/vsc\";\nimport { BiMenuAltRight } from \"react-icons/bi\";\nimport { BiX } from \"react-icons/bi\";\n\nexport default function Navigation(props) {\n    const data= props.props[0];\n    // console.log(data.buttonName);\n    const {id, index, home, tuning, result, report, buttonName, buttonLink} = props.props[0];\n    // console.log(buttonName);\n    const [stateClicked, handleToggle] = useState(false)\n\n    const toggleCollapse = () => handleToggle(stateClicked => !stateClicked)\n    return (\n        <body>\n            <div>\n                <div className=\"nav-wrapper\">\n                    <Navbar className=\"gradient-nav\" expand=\"lg\">\n                        <Navbar.Brand id=\"nav-brand\" href={data.home}>Assignment 2: Explainability</Navbar.Brand>\n                            <div className=\"nav-links\">\n                                <Nav>    \n                                    {/* <Nav.Link href=\"#part1-modeltuning\">Model Tuning</Nav.Link>\n                                    <Nav.Link href=\"#part1-modelresult\">Model Result</Nav.Link>\n                                    <Nav.Link href=\"#part1-report\">Report Submissions</Nav.Link> */}\n                                    <Nav.Link href={data.tuning}>Model Tuning</Nav.Link>\n                                    <Nav.Link href={data.result}>Model Result</Nav.Link>\n                                    <Nav.Link href={data.report}>Report Submissions</Nav.Link>\n                                </Nav>\n                            </div>\n                            <div className=\"to-part-2\">\n                                <HashRouter>\n                                    <Nav.Link href={data.buttonLink}>\n                                        <Button className=\"part-button\">{data.buttonName}</Button>\n                                    </Nav.Link>\n                                </HashRouter>\n                                <p><VscQuestion size={24}/></p>\n                            </div>\n                            <div className=\"burger\">\n                                <div onClick = {toggleCollapse}>\n                                    {stateClicked ? <BiX size={32}/> : <BiMenuAltRight size={32}/>}\n                                </div>\n                            </div>\n                    </Navbar>\n                    <div onClick={toggleCollapse}>\n                        <Nav className={stateClicked ? \"dropdown-show\" : \"dropdown-menu\"}>    \n                            <ul className=\"dropdown-links\">\n                                <li><Nav.Link href={data.tuning}>Model Tuning</Nav.Link></li>\n                                <li><Nav.Link href={data.result}>Model Result</Nav.Link></li>\n                                <li><Nav.Link href={data.report}>Report Submissions</Nav.Link></li>\n                            </ul>\n                        </Nav>\n                        <div className=\"background-shadow\"></div>\n                    </div>\n                </div>\n            </div>\n        </body>\n    )\n}\n","const layerData=[\n    {\n        'id':'convo-layer',\n        'index': 0,\n        \"title\":\"Convolutional Layer\",\n        \"desc\":\"Core building block of CNN\",\n    },\n    {\n        'id':'dense-layer',\n        'index': 1,\n        \"title\":\"Dense Layer\",\n        \"desc\":\"Core building block of CNN\",\n    },\n    {\n        'id':'max-layer',\n        'index': 2,\n        \"title\":\"Max Pooling Layer\",\n        \"desc\":\"Reduces the amount of computation in the network\",\n    }\n]\n\nexport default layerData;","import React from 'react'\nimport Button from 'react-bootstrap/Button'\nimport './LayerCard.css'\n\nexport default function LayerCard(props) {\n    const {id, index, title, desc} = props.props;\n    // console.log(props.props)\n\n    return (\n        <div className=\"layer-card\">\n            <h6>{title}</h6>\n            <p className=\"layer-desc\">{desc}</p>\n            <div>\n                <Button className=\"add-layer-button\">+</Button>\n            </div>\n        </div>\n    )\n}\n","const layersList = [\n    {\n        'id':'input-layer',\n        'index': 0,\n        \"title\":\"Input Layer\",\n        \"desc\":\"Input Test and Training Images\",\n    },\n    {\n        'id':'convo-layer',\n        'index': 1,\n        \"title\":\"Convolutional Layer\",\n        \"desc\":\"Ouput: (None, 0, 32, 32)\",\n    },\n    {\n        'id':'max-layer',\n        'index': 2,\n        \"title\":\"Max Pooling Layer\",\n        \"desc\":\"Ouput: (None, 0, 32, 32)\",\n    },\n    {\n        'id':'dense-layer',\n        'index': 3,\n        \"title\":\"Dense Layer\",\n        \"desc\":\"Ouput: (None, 0, 32, 32)\",\n    },\n    {\n        'id':'flatten-layer',\n        'index': 4,\n        \"title\":\"Flatten Layer\",\n        \"desc\":\"Ouput: (None, 0, 32, 32)\",\n    },\n    {\n        'id':'output-layer',\n        'index': 5,\n        \"title\":\"Output Layer\",\n        \"desc\":\"Labeled Images\",\n    },\n]\n\nexport default layersList;","import React from 'react'\nimport './LayerList.css'\n\nimport Button from 'react-bootstrap/Button'\n\nexport default function LayerList(props) {\n    const {id, index, title, desc} = props.props;\n\n    return (\n        <div className=\"layerList-outer\">\n            <div className=\"layerList-wrapper\">\n                <div className=\"square\"></div>\n                <div className=\"layer-desc\">\n                    <p>{title}</p>\n                    <p>{desc}</p>\n                </div>\n            </div>\n            <Button className=\"minus-button\">-</Button>\n        </div>\n    )\n}\n","import React, {useState} from 'react'\nimport './ModelTuning.css'\n// import RangeSlider from 'react-bootstrap-range-slider';\nimport cardData from '../../LayerCard/cardData'\nimport LayerCard from '../../LayerCard/LayerCard';\nimport layersList from '../../LayerList/layersList'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport LayerList from '../../LayerList/LayerList'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Container from 'react-bootstrap/Container'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Tooltip from 'react-bootstrap/Tooltip'\n\n\nimport { VscQuestion } from \"react-icons/vsc\";\n\nexport default function ModelTuning() {\n    const [ value, setValue ] = useState(0); \n    const property = cardData;\n    // console.log(cardData);\n    const layerCard = property.map( (index) => <LayerCard props={index}/>);\n    // console.log(property[0].desc);\n    const layers = layersList;\n    const listoflayers = layers.map( (index) => <LayerList props={index}/>);\n \n    return (\n        <div className=\"tuning-wrapper\">\n            <div className=\"top-row\">\n                <div className=\"input\">\n                    <h5>INPUT</h5>\n                    <div className=\"input-inside\">\n                        <Container>\n                            <Row>\n                                <Col>\n                                <div className=\"param-info\">\n                                    <p className=\"param-name\">DATA DIVISION</p>\n                                    <OverlayTrigger\n                                    overlay={\n                                        <Tooltip>\n                                        Training to Testing Data division\n                                        </Tooltip>\n                                    }\n                                    >\n                                        <VscQuestion color=\"#76819A\"/>\n                                    </OverlayTrigger>\n                                </div>\n                                {/* <p className=\"param-desc\">Training to Testing Data division</p> */}\n                                <Form>\n                                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                        <Form.Control as=\"select\">\n                                        <option>10:90</option>\n                                        <option>30:70</option>\n                                        <option>50:50</option>\n                                        <option>70:30</option>\n                                        <option>10:90</option>\n                                        </Form.Control>\n                                    </Form.Group>\n                                </Form>\n                                </Col>\n                                <Col>\n                                    <div className=\"param-info\">\n                                        <p className=\"param-name\">BATCH SIZE</p>\n                                        <OverlayTrigger\n                                    overlay={\n                                        <Tooltip>\n                                        Number of Batches per Epochs\n                                        </Tooltip>\n                                    }\n                                    >\n                                        <VscQuestion color=\"#76819A\"/>\n                                    </OverlayTrigger>\n                                    {/* <p className=\"param-desc\">Number of Batches per Epochs</p> */}\n                                    </div>\n                                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                        <Form.Control as=\"select\">\n                                        <option>100</option>\n                                        <option>200</option>\n                                        <option>300</option>\n                                        <option>400</option>\n                                        <option>500</option>\n                                        </Form.Control>\n                                    </Form.Group>\n                                </Col>\n                                <Col>\n                                <div className=\"param-info\">\n                                    <p className=\"param-name\">EPOCHS</p>\n                                    <OverlayTrigger\n                                    overlay={\n                                        <Tooltip>\n                                        Number of passes through the entire training dataset\n                                        </Tooltip>\n                                    }\n                                    >\n                                        <VscQuestion color=\"#76819A\"/>\n                                    </OverlayTrigger>\n                                    {/* <p className=\"param-desc\">Number of passes through the entire training dataset</p> */}\n                                </div>\n                                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                    <Form.Control as=\"select\">\n                                    <option>15</option>\n                                    <option>50</option>\n                                    <option>100</option>\n                                    <option>200</option>\n                                    <option>500</option>\n                                    </Form.Control>\n                                </Form.Group>\n                                </Col>  \n                                <Col>\n                                <div className=\"param-info\">\n                                    <p className=\"param-name\">ACTIVATION FUNCTION</p>\n                                    <OverlayTrigger\n                                    overlay={\n                                        <Tooltip>\n                                        Activation Function Used for the Convolutional Layer\n                                        </Tooltip>\n                                    }\n                                    >\n                                        <VscQuestion color=\"#76819A\"/>\n                                    </OverlayTrigger>\n                                    {/* <p className=\"param-desc\">Activation Function Used for the Convolutional Layer</p> */}\n                                </div>\n                                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                    <Form.Control as=\"select\">\n                                    <option>Relu</option>\n                                    <option>Activation Function 2</option>\n                                    </Form.Control>\n                                </Form.Group>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </div>\n                </div>\n                <div className=\"layers\">\n                    <h5>LAYERS</h5>\n                    <div className=\"layers-inside\">\n                        <div className=\"layer-input\">\n                            <Form.Control type=\"text\" placeholder=\"Enter Layer Type\" />\n                            <Button className=\"addlayer-button\">+</Button>\n                        </div>\n                        {listoflayers}\n                    </div>\n                </div>  \n            </div>\n            {/* <div className=\"addLayers\"> */}\n                {/* <h5>ADD LAYERS</h5> */}\n                {/* <div className=\"add-inside\"> */}\n                    {/* {<LayerCard props={property[0]}/>} */}\n                    {/* {layerCard} */}\n                {/* </div> */}\n            {/* </div> */}\n            <Button className=\"global-button make-model\">Generate Model</Button>\n        </div>\n    )\n}\n","import React from 'react'\nimport './ModelResult.css'\nimport Chart from 'react-google-charts'\n\nexport default function ModelResult() {\n    return (\n        <div className=\"result-wrapper\">\n            <div className=\"result\">\n                <h5>RESULT</h5>\n                <div className=\"result-inside\">\n                    <p>Accuracy:</p>\n                    <p>60.7%</p>\n                </div>\n                <div className=\"chart-wrapper\">\n                    <Chart\n                        width={'600px'}\n                        height={'400px'}\n                        chartType=\"Line\"\n                        loader={<div>Getting Your Results...</div>}\n                        data={[\n                            [\n                            'Percentage',\n                            'Accuracy',\n                            'Loss',\n                            'Transformers: Age of Extinction',\n                            ],\n                            [1, 37.8, 80.8, 41.8],\n                            [2, 30.9, 69.5, 32.4],\n                            [3, 25.4, 57, 25.7],\n                            [4, 11.7, 18.8, 10.5],\n                            [5, 11.9, 17.6, 10.4],\n                            [6, 8.8, 13.6, 7.7],\n                            [7, 7.6, 12.3, 9.6],\n                            [8, 12.3, 29.2, 10.6],\n                            [9, 16.9, 42.9, 14.8],\n                            [10, 12.8, 30.9, 11.6],\n                            [11, 5.3, 7.9, 4.7],\n                            [12, 6.6, 8.4, 5.2],\n                            [13, 4.8, 6.3, 3.6],\n                            [14, 4.2, 6.2, 3.4],\n                        ]}\n                        options={{\n                            chart: {\n                            title: 'Comparison of Accuracy and Loss of the Model',\n                            subtitle: 'in Percentage',\n                            },\n                        }}\n                        rootProps={{ 'data-testid': '3' }}\n                        />\n                    </div>\n            </div>  \n        </div>\n    )\n}\n","import React from 'react'\nimport { Button } from 'react-bootstrap'\nimport \"./Report.css\"\n\n\nexport default function Report() {\n    return (\n        <div className=\"report-wrapper\">\n            <h5>REPORT SUBMISSION</h5>\n                <div className=\"report-inside\">\n                    <p>You can submit multiple times. The report you submit here will be used for grading.</p>\n                    <div className=\"give-report\">\n                        <Button className=\"outline-button\"> Choose a file..</Button>\n                        <p>Example.pdf</p>\n                    </div>\n                </div> zx\n            <Button className=\"global-button submit-button\">Submit Report</Button>\n        </div>\n    )\n}\n","import React from 'react'\nimport './Intro.css'\n\nimport Button from 'react-bootstrap/Button'\nimport Nav from 'react-bootstrap/Nav'\nimport {Link} from 'react-router-dom'\nimport ModelTuning from '../ModelTuning/ModelTuning'\n\nexport default function Intro() {\n    return (\n        <div className=\"intro-wrapper\">\n            <h1 className=\"title\">Assignment 2: Should I Trust You with My Decision? </h1>\n            <div className=\"directions\">\n                <h3 className=\"sub-title\">What do I do?</h3>\n                <p>It's a two-part assignment. First, you will use our interactive platform to explore, implement, and inspect methods for detecting, scoring, and mitigating AI bias. Second, you will reflect on your activities through answering a series of discussion questions below.</p>\n                <h3 className=\"sub-title\">Scenario</h3>\n                <p className=\"scenario\">“You are making an image classification model for a satellite to sense whether an area is densely packed with life or not. None densely packed areas will be used for building new cities for your client.”</p>\n                <h3 className=\"sub-title\">Discussion Questions</h3>\n                <p>Please answer the following questions after you complete the exploration and implementation through the platform above. Make sure to cite any external sources when you refer to examples, ideas, and quotes to support your arguments.</p>\n            </div>\n            <Link exact to=\"#part1-modeltuning\">\n                <Button className=\"middle global-button\">Proceed to Part 1</Button>\n            </Link>\n        </div>\n    )\n}\n","const navLinks = {\n    'part1': [\n        {\n            'id':'part1',\n            'index':0,\n            'home':'#part1',\n            'tuning':'#part1-modeltuning',\n            'result':'#part1-modelresult',\n            'report':'#part1-reportsubmission',\n            'buttonName':'Part 2',\n            'buttonLink':'#part2'\n        }\n    ],\n    'part2': [\n        {\n            'id':'part2',\n            'index':0,\n            'home':'#part2',\n            'tuning':'#part2-modeltuning',\n            'result':'#part2-modelresult',\n            'report':'#part2-reportsubmission',\n            'buttonName':'Part 1',\n            'buttonLink':'#part1'\n        }\n    ]\n}\n\nexport default navLinks;","import React from 'react'\nimport './ModelResult.css'\n\nimport Chart from 'react-google-charts'\n\nexport default function ModelResult() {\n    return (\n        <div className=\"result-wrapper\">\n            <div className=\"result\">\n                <h5>RESULT</h5>\n                <div className=\"result-inside\">\n                    <p>Accuracy:</p>\n                    <p>60.7%</p>\n                </div>\n                <div className=\"chart-wrapper1\">\n                    <Chart\n                        width={'600px'}\n                        height={'400px'}\n                        chartType=\"Line\"\n                        loader={<div>Getting Your Results...</div>}\n                        data={[\n                            [\n                            'Percentage',\n                            'Accuracy',\n                            'Loss',\n                            'Transformers: Age of Extinction',\n                            ],\n                            [1, 37.8, 80.8, 41.8],\n                            [2, 30.9, 69.5, 32.4],\n                            [3, 25.4, 57, 25.7],\n                            [4, 11.7, 18.8, 10.5],\n                            [5, 11.9, 17.6, 10.4],\n                            [6, 8.8, 13.6, 7.7],\n                            [7, 7.6, 12.3, 9.6],\n                            [8, 12.3, 29.2, 10.6],\n                            [9, 16.9, 42.9, 14.8],\n                            [10, 12.8, 30.9, 11.6],\n                            [11, 5.3, 7.9, 4.7],\n                            [12, 6.6, 8.4, 5.2],\n                            [13, 4.8, 6.3, 3.6],\n                            [14, 4.2, 6.2, 3.4],\n                        ]}\n                        options={{\n                            chart: {\n                            title: 'Comparison of Accuracy and Loss of the Model',\n                            subtitle: 'in Percentage',\n                            },\n                        }}\n                        rootProps={{ 'data-testid': '3' }}\n                        />\n                </div>\n                <div className=\"chart-wrapper2\">\n                    <Chart\n                        width={'600px'}\n                        height={'400px'}\n                        chartType=\"Line\"\n                        loader={<div>Getting Your Results...</div>}\n                        data={[\n                            [\n                            'Percentage',\n                            'Accuracy',\n                            'Loss',\n                            'Transformers: Age of Extinction',\n                            ],\n                            [1, 37.8, 80.8, 41.8],\n                            [2, 30.9, 69.5, 32.4],\n                            [3, 25.4, 57, 25.7],\n                            [4, 11.7, 18.8, 10.5],\n                            [5, 11.9, 17.6, 10.4],\n                            [6, 8.8, 13.6, 7.7],\n                            [7, 7.6, 12.3, 9.6],\n                            [8, 12.3, 29.2, 10.6],\n                            [9, 16.9, 42.9, 14.8],\n                            [10, 12.8, 30.9, 11.6],\n                            [11, 5.3, 7.9, 4.7],\n                            [12, 6.6, 8.4, 5.2],\n                            [13, 4.8, 6.3, 3.6],\n                            [14, 4.2, 6.2, 3.4],\n                        ]}\n                        options={{\n                            chart: {\n                            title: 'Comparison of Accuracy and Loss of the Model',\n                            subtitle: 'in Percentage',\n                            },\n                        }}\n                        rootProps={{ 'data-testid': '3' }}\n                        />\n                </div>\n                <div className=\"chart-wrapper3\">\n                    <Chart\n                        width={'600px'}\n                        height={'400px'}\n                        chartType=\"Line\"\n                        loader={<div>Getting Your Results...</div>}\n                        data={[\n                            [\n                            'Percentage',\n                            'Accuracy',\n                            'Loss',\n                            'Transformers: Age of Extinction',\n                            ],\n                            [1, 37.8, 80.8, 41.8],\n                            [2, 30.9, 69.5, 32.4],\n                            [3, 25.4, 57, 25.7],\n                            [4, 11.7, 18.8, 10.5],\n                            [5, 11.9, 17.6, 10.4],\n                            [6, 8.8, 13.6, 7.7],\n                            [7, 7.6, 12.3, 9.6],\n                            [8, 12.3, 29.2, 10.6],\n                            [9, 16.9, 42.9, 14.8],\n                            [10, 12.8, 30.9, 11.6],\n                            [11, 5.3, 7.9, 4.7],\n                            [12, 6.6, 8.4, 5.2],\n                            [13, 4.8, 6.3, 3.6],\n                            [14, 4.2, 6.2, 3.4],\n                        ]}\n                        options={{\n                            chart: {\n                            title: 'Comparison of Accuracy and Loss of the Model',\n                            subtitle: 'in Percentage',\n                            },\n                        }}\n                        rootProps={{ 'data-testid': '3' }}\n                        />\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navigation from './components/Navbar/Navigation';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  HashRouter\n} from \"react-router-dom\";\n\nimport ModelTuning from './components/Part1/ModelTuning/ModelTuning'\nimport ModelResult from './components/Part1/ModelResult/ModelResult'\nimport Report from './components/Part1/Report/Report'\nimport Intro from './components/Part1/Intro/Intro'\n\nimport navLinks from './navLinks'\n\nimport ModelResult2 from './components/Part2/ModelResult/ModelResult'\n\nfunction App() {\n  const link = window.location.href;\n  const pathname = window.location.pathname;\n  const partName = link.substring(link.indexOf(pathname) + pathname.length + 2, link.length);\n  console.log(partName);\n  const navBar = <Navigation props={navLinks.part2}/>\n  // if (partName == 'part1'){\n  //   return <Navigation props={navLinks.part1}/>\n  // }\n  // else {\n  //   return <Navigation props={navLinks.part2}/>\n  // }\n  return (\n    <div>\n      {navBar}\n      <HashRouter>\n        <Route path=\"/part1-modeltuning\"><ModelTuning/></Route>\n        <Route path=\"/part1-modelresult\"><ModelResult/></Route>\n        <Route path=\"/part1-reportsubmission\"><Report/></Route>\n        <Route exact path=\"/part1\"><Intro/></Route>\n      </HashRouter>\n      <HashRouter basename=\"/part2\">\n        <Route path=\"/part2-modeltuning\"><ModelTuning/></Route>\n        <Route path=\"/part2-modelresult\"><ModelResult2/></Route>\n        <Route path=\"/part2-reportsubmission\"><Report/></Route>\n        <Route exact path=\"/part2\"></Route>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}